<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mkfactory.toothless.d.sb.resume.mapper.ResumeSqlMapper">

	<!-- 이력서 등록 -->
	<insert id="insertResumeDto">
		INSERT INTO tl_d_resume values(
			tl_d_resume_seq.nextval,
			#{student_pk},
			#{resume_title},
			#{cover_letter},
			#{main_resume},
			#{is_public},
			sysdate
		)	
	</insert>

	<!-- 학생의 이력서 가져오기 -->
	<select id="getResumeListByStudentPk" resultType="com.mkfactory.toothless.d.dto.ResumeDto">
		SELECT * FROM tl_d_resume WHERE student_pk = #{student_pk} ORDER BY main_resume DESC	
	</select>
	
	
	

	<!-- 선택된 이력서 가져오기 -->
	<select id="getResumeDtoByResumePk" resultType="com.mkfactory.toothless.d.dto.ResumeDto">
		SELECT * FROM tl_d_resume WHERE resume_pk = #{resume_pk}
	</select>
	
	<!--메인이력서로 등록시 그 외 이력서 메인설정과 공개 여부 설정 변경  -->
	<update id="changeMainAndPublic">
		UPDATE tl_d_resume SET main_resume = 'N' ,is_public = 'N' WHERE resume_pk = #{resume_pk}
	</update>

	<!-- 기본이력서를 메인이력서로 선택시 -->
	<update id="changeMainResume">
		UPDATE tl_d_resume SET main_resume = 'Y' ,is_public = 'N' WHERE resume_pk = #{resume_pk}
	</update>
	
	<!-- 이력서 공개 -->
	<update id="changePublicResume">
		UPDATE tl_d_resume SET is_public = 'Y' WHERE resume_pk = #{resume_pk}
	</update>
	
	<!-- 이력서 비공개 -->
	<update id="changePrivateResume">
		UPDATE tl_d_resume SET is_public = 'N' WHERE resume_pk = #{resume_pk}
	</update>

	<!-- 이력서 삭제 -->
	<delete id="deleteResumeByResumePk">
		DELETE FROM tl_d_resume WHERE resume_pk = #{resume_pk}
	</delete>

	<!-- 이력서 상세보기  -->
	<select id="getThisResumeDtoByResumePk" resultType="com.mkfactory.toothless.d.dto.ResumeDto">
		SELECT * FROM tl_d_resume WHERE resume_pk = #{resume_pk}	
	</select>
	
	
	
	<!-- 자소서 수정 -->
	<update id="updateResumeDtoByResumePk">
		UPDATE tl_d_resume SET resume_title = #{resume_title} , cover_letter = #{cover_letter} WHERE resume_pk = #{resume_pk}
	</update>
	
	<!-- 경력 카테고리 가져오기  -->
	<select id="getCareerCategoryList" resultType="com.mkfactory.toothless.d.dto.CareerCategoryDto">
		SELECT * FROM tl_d_career_category
	</select>
	
	<!-- 경력 추가 -->
	<insert id="insertCareerContents">
		INSERT INTO tl_d_career values(
			tl_d_career_seq.nextval,
			#{resume_pk},
			#{career_category_pk},
			#{career_contents},
			sysdate
		)	
	</insert>
	
	<!-- 해당 이력서의 경력 가져오기 -->
	<select id="getCareerByResumePk" resultType="com.mkfactory.toothless.d.dto.CareerDto">
		SELECT * FROM tl_d_career WHERE resume_pk = #{resume_pk} ORDER BY career_category_pk , created_at ASC	
	</select>
	
	<!-- 해당 카테고리 번호의 카테고리명 가져오기 -->
	<select id="getCareerCategoryNameByCategoryPk" resultType="com.mkfactory.toothless.d.dto.CareerCategoryDto">
		SELECT career_category_name FROM tl_d_career_category WHERE career_category_pk = #{career_category_pk}
	</select>
	
	<!-- 경력 삭제 -->
	<delete id="deleteCareerByCareerPk">
		DELETE FROM tl_d_career WHERE career_pk = #{career_pk}
	</delete>
	
	<!-- 경력 수정 -->
	<update id="updateCareerByCareerPk">
		UPDATE tl_d_career SET 
			career_category_pk = #{career_category_pk}, 
			career_contents = #{career_contents}
		WHERE career_pk = #{career_pk}
	</update>
	
	<!-- 자격증 추가 -->
	<insert id="insertLicenseContents">
		INSERT INTO tl_d_license values(
			tl_d_license_seq.nextval,
			#{resume_pk},
			#{lic_name},
			#{lic_gain_year},
			#{lic_gain_month},
			#{lic_center},
			sysdate
		)
	</insert>
	
	<!-- 해당이력서의 자격증 목록 가져오기 -->
	<select id="getLicenseDtoListByResumePk" resultType="com.mkfactory.toothless.d.dto.LicenseDto">
		SELECT * FROM tl_d_license WHERE resume_pk = #{resume_pk} ORDER BY license_pk asc	
	</select>
	
	<!-- 해당 자격증 삭제 -->
	<delete id="deleteLicenseByLicensePk">
		DELETE FROM tl_d_license WHERE license_pk = #{license_pk}
	</delete>

	<!-- 해당 자격증 수정 -->
	<update id="updateLicenseByLicensePk">
		UPDATE tl_d_license SET lic_name = #{lic_name}, lic_gain_year = #{lic_gain_year} ,lic_gain_month = #{lic_gain_month}, lic_center = #{lic_center} WHERE license_pk = #{license_pk}
	</update>



	
	<!-- 지원하려는 공고 정보 가져오기 -->
	<select id="getJobPostingByJobPostingPk" resultType="com.mkfactory.toothless.d.dto.JobPostingDto">
		SELECT * FROM tl_d_job_posting WHERE job_posting_pk = #{job_posting_pk}
	</select>
	
	<!-- 공고 지원하기 -->
	<insert id="insertFromJobPostingToVolunteer">
		INSERT INTO tl_d_volunteer values(
			tl_d_volunteer_seq.nextval,
			#{job_posting_pk},
			#{resume_pk},
			#{vol_phone},
			#{vol_email},
			sysdate
			
		)	
	</insert>
	
	
	<!-- 내가 지원한 공고 목록 가져오기 -->
	<select id="getPostingListByStudentPk" resultType="com.mkfactory.toothless.d.dto.JobPostingDto">
		SELECT * FROM TL_D_JOB_POSTING tdjp 
		WHERE tdjp.JOB_POSTING_PK IN (
		   SELECT JOB_POSTING_PK FROM TL_D_VOLUNTEER 
		   WHERE resume_pk IN (
		      SELECT RESUME_PK FROM TL_D_RESUME tdr 
		      WHERE tdr.STUDENT_PK = #{student_pk}
		      )
		   )ORDER BY tdjp.COM_PK ASC	
	</select>
	
	<!-- 학생이 지원한 기업 정보 가져오기 -->
	<select id="getComPanyDtoListByStudentPk" resultType="com.mkfactory.toothless.d.dto.CompanyDto">
		SELECT * FROM TL_D_COMPANY tdc 
		WHERE com_pk IN (
			SELECT com_pk FROM TL_D_JOB_POSTING tdjp 
			WHERE JOB_POSTING_PK IN (
				SELECT job_posting_pk FROM TL_D_VOLUNTEER 
				WHERE resume_pk IN (
					SELECT resume_pk FROM TL_D_RESUME tdr 
					WHERE tdr.STUDENT_PK = #{student_pk}
				)
			)
		)	
	</select>
	
	<!-- 학생이 지원한 공고 수 가져오기 -->
	<select id="getCountForStudentApplyListByStudentPk" resultType="int">
		SELECT count(*) FROM TL_D_JOB_POSTING tdjp 
		WHERE tdjp.JOB_POSTING_PK IN (
			SELECT JOB_POSTING_PK FROM TL_D_VOLUNTEER 
			WHERE resume_pk IN (
				SELECT RESUME_PK FROM TL_D_RESUME tdr 
				WHERE tdr.STUDENT_PK = #{student_pk}
			)
		)	
	</select>
	
	<!-- 공고 지원 취소하기 -->
	<delete id="cancleApplyForJobPosting">
		DELETE FROM TL_D_VOLUNTEER
		WHERE RESUME_PK IN (
		    SELECT RESUME_PK
		    FROM TL_D_RESUME tdr 
		    WHERE STUDENT_PK = #{student_pk}
		)
		AND JOB_POSTING_PK = #{job_posting_pk}
	</delete>
	
	
	<!-- 학생 마이페이지에 내가 지원한 공고 목록 4줄 요약 -->
	<select id="getApplyListByStudentPkToMyPage" resultType="com.mkfactory.toothless.d.dto.JobPostingDto">
		SELECT * FROM (
			SELECT * FROM TL_D_JOB_POSTING tdjp 
			WHERE tdjp.JOB_POSTING_PK IN (
				SELECT JOB_POSTING_PK FROM TL_D_VOLUNTEER 
				WHERE resume_pk IN (
					SELECT RESUME_PK FROM TL_D_RESUME tdr 
					WHERE tdr.STUDENT_PK = #{student_pk}
				)
			)ORDER BY tdjp.COM_PK ASC
		)
		<![CDATA[
		WHERE rownum <= 4
		]]>
	</select>
	
	<!-- 가족기업에서 보는 공개된 학생의 이력서 목록 가져오기 -->
	<select id="getMainResumeListByIsPublic" resultType="com.mkfactory.toothless.d.dto.ResumeDto">
		SELECT * FROM tl_d_resume WHERE is_public = 'Y'
	</select>
	
	<select id="getStudentDtoByResumePk" resultType="com.mkfactory.toothless.donot.touch.dto.StudentInfoDto">
		SELECT * FROM TL_JIC_STUDENT_info WHERE STUDENT_PK = #{student_pk}
	</select>
	
	
	
	<!--							 				ajax 									-->
	
	
	
	<!-- 학생의 일반이력서목록만 가져오기 -->
	<select id="getGeneralResumeListByStudentPk" resultType="com.mkfactory.toothless.d.dto.ResumeDto">
		SELECT * FROM tl_d_resume WHERE student_pk = #{student_pk} AND main_resume='N' ORDER BY resume_pk DESC	
	</select>
	
		<!-- 이력서 삭제 -->
	<delete id="deleteThisResumeByResumePk">
		DELETE FROM tl_d_resume WHERE resume_pk = #{resume_pk}
	</delete>
	
	<!-- 메인 이력서 가져오기 -->
	<select id="getMainResumeDtoByStudentPk" resultType="com.mkfactory.toothless.d.dto.ResumeDto">
		SELECT * FROM tl_d_resume WHERE student_pk = #{student_pk} AND main_resume='Y'
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


</mapper>