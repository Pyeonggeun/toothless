<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mkfactory.toothless.d.jm.consulting.mapper.ConsultingMapper">


<!-- (학생)구직희망신청 정보 입력 -->
<insert id="insertHopeJobApply">
	INSERT INTO tl_d_hope_job values(
	tl_d_hope_job_seq.nextval,
	#{student_pk},
	#{hope_salary},
	#{hope_area},
	#{requierments},
	'N',
	sysdate
	)
</insert>




<!-- (학생)구직희망신청 중복 확인 -->
<select id="checkOverlapHopeJobApply" resultType="int">
SELECT count(*) FROM tl_d_hope_job
WHERE 1 = 1
AND student_pk = #{student_pk}
AND is_end_hope_job = 'N'
</select>

<!-- (학생)온라인 상담 정보 입력용-->
<!--  (학생) 가장 최근 구직희망신청 정보 출력  -->
<select id="getLastHopejob" resultType="com.mkfactory.toothless.d.dto.HopeJobDto">
SELECT *
FROM tl_d_hope_job
WHERE CREATED_AT =
	(SELECT max(CREATED_AT)
	 FROM tl_d_hope_job
	 WHERE STUDENT_PK = #{STUDENT_PK}
	) 
</select>

<!-- 학생 진행중인 구직희망 뽑아오기 -->
<select id="getProgressHopejob" resultType="com.mkfactory.toothless.d.dto.HopeJobDto">
SELECT *
FROM tl_d_hope_job
WHERE CREATED_AT =
	(SELECT max(CREATED_AT)
	 FROM tl_d_hope_job
	 WHERE STUDENT_PK = #{STUDENT_PK}
	 AND is_end_hope_job = 'N'
	) 
</select>






<!-- (학생)온라인 상담 정보 입력 -->
<insert id="insertOnlineConsulting">
INSERT INTO tl_d_online_consulting values(
	tl_d_online_consulting_seq.nextval,
	#{hope_job_pk},
	#{on_consulting_contents},
	sysdate
)
</insert>

<!-- 온라인 상담 가능여부 확인용 -->
<!-- 특정학생 가장 최근 온라인 상담내역 -->
<select id="getLastOnConsulting" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingDto">
SELECT *
FROM tl_d_online_consulting
WHERE CREATED_AT = (
		SELECT max(CREATED_AT) 
		FROM tl_d_online_consulting
		WHERE HOPE_JOB_PK =
			(
			SELECT hope_job_pk
			FROM tl_d_hope_job
			WHERE 
				CREATED_AT = 
				(
				SELECT max(CREATED_AT) FROM tl_d_hope_job where student_pk = #{student_pk}
				)
			)
		)

</select>

<!-- 온라인 상담 가능여부 확인용 -->
<!-- 특정학생 상담 답글 달렸는지 확인용 -->
<select id="checkOnConsultingReply" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingReplyDto">
SELECT *
FROM tl_d_online_consulting_reply
WHERE on_consulting_pk = #{on_consulting_pk}
</select>


<!-- (학생) 온라인상담 전체보기 -->
<!-- 정확히는 구직희망pk에따른것 -->
<select id="getMyOnlineConsultingList" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingDto">
SELECT t2.*
FROM (
	SELECT t1.*,rownum rnum
	FROM (
		SELECT a.*
		FROM tl_d_online_consulting a
		WHERE Hope_job_pk = #{hope_job_pk}
			<if test="isReply != null">
				<choose>
					<when test="isReply == 'all'">
						AND 1=1		
					</when>
					<when test="isReply == 'Reply'">
				 		AND ON_CONSULTING_PK in
				 		(
						SELECT ON_CONSULTING_PK from TL_D_ONLINE_CONSULTING_REPLY		 		
				 		)
				 		
					</when>
					<when test="isReply == 'unReply'">
				 		AND ON_CONSULTING_PK not in
				 		(
						SELECT ON_CONSULTING_PK from TL_D_ONLINE_CONSULTING_REPLY		 		
				 		)
					</when>
				</choose>
			</if>			
		ORDER BY a.created_at desc	
	)t1
)t2

</select>


<!-- (학생) 온라인상담 5건보기 -->
<!-- 정확히는 구직희망pk에따른것 -->
<select id="getMyOnlineConsultingListNumFive" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingDto">
SELECT t2.*
FROM (
	SELECT t1.*,rownum rnum
	FROM (
		SELECT a.*
		FROM tl_d_online_consulting a
		WHERE Hope_job_pk = #{hope_job_pk}
			<if test="isReply != null">
				<choose>
					<when test="isReply == 'all'">
						AND 1=1		
					</when>
					<when test="isReply == 'Reply'">
				 		AND ON_CONSULTING_PK in
				 		(
						SELECT ON_CONSULTING_PK from TL_D_ONLINE_CONSULTING_REPLY		 		
				 		)
				 		
					</when>
					<when test="isReply == 'unReply'">
				 		AND ON_CONSULTING_PK not in
				 		(
						SELECT ON_CONSULTING_PK from TL_D_ONLINE_CONSULTING_REPLY		 		
				 		)
					</when>
				</choose>
			</if>			
		ORDER BY a.created_at desc	
	)t1
)t2
<![CDATA[
    WHERE rnum <= 5
]]>
</select>










<!-- 교직원 화면 출력용 -->
<!-- 미응답 온라인 상담 최근 5개 오래된순으로 꺼내오기 -->
<select id="getOnConsultingListNumFiveASC" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingDto">
SELECT t2.*
FROM (
	SELECT t1.*, rownum AS rnum
	FROM (
		SELECT a.*
		FROM tl_d_online_consulting a
		WHERE a.ON_CONSULTING_PK NOT in
			(	
			SELECT b.ON_CONSULTING_PK
			FROM tl_d_online_consulting_reply b
			) 
		AND a.hope_job_pk IN
			(
			SELECT c.HOPE_JOB_PK 
			FROM TL_D_HOPE_JOB c
			WHERE c.IS_END_HOPE_JOB = 'N'
			)			
		ORDER BY a.CREATED_AT asc
	)t1
)t2
<![CDATA[
    WHERE rnum <= 5
]]>

</select>

<!-- 교직원 화면 출력용 -->
<!-- 구직 희망 신청번호로 구직희망 정보 뽑기 -->
<select id="getHopeJobByPk" resultType="com.mkfactory.toothless.d.dto.HopeJobDto">
SELECT *
FROM TL_D_HOPE_JOB
WHERE HOPE_JOB_PK = #{HOPE_JOB_PK}
</select>

<!-- 교직원 화면 출력용 -->
<!--  학생정보 뽑기 -->
<select id="getStudentInfoByPk" resultType="com.mkfactory.toothless.donot.touch.dto.StudentInfoDto">
SELECT *
FROM TL_JIC_STUDENT_INFO
WHERE STUDENT_PK = #{STUDENT_PK}
</select>

<!-- 교직원 화면 출력용 -->
<!-- 구직희망신청번호pk로 구직관심 리스트 + 채용분야 이름까지 뽑기 -->
<select id="getHopeJobCategoryByHopeJobPk" resultType="map">
SELECT * FROM TL_D_HOPE_JOB_CATEGORY a
INNER JOIN TL_D_JOB_FIELD_CATEGORY b ON a.JOB_FIELD_CATEGORY_PK = b.JOB_FIELD_CATEGORY_PK 
WHERE HOPE_JOB_PK = #{hope_job_pk}
</select>



<!-- 교직원 -->
<!-- 온라인 상담 답글 달기 -->
<insert id="insertOnlineConsultingReply">
INSERT INTO tl_d_online_consulting_reply VALUES(
	tl_d_on_consulting_reply_seq.nextval,
	#{on_consulting_pk},
	#{staff_pk},
	#{on_contents_reply},
	sysdate
)

</insert>





<!-- 온라인 상담 자세히보기 페이지 출력용-->
<select id="getOnlineConsultingByPk" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingDto">
SELECT * FROM tl_d_online_consulting a
WHERE a.ON_CONSULTING_PK = #{ON_CONSULTING_PK}
</select>

<select id="getOnConsultingReplyByOnPk" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingReplyDto">
SELECT * FROM tl_d_online_consulting_reply
WHERE ON_CONSULTING_PK = #{ON_CONSULTING_PK}
</select>


<!--  스태프 pk로 스태프 정보추출 -->
<select id="getStaffInfoByPk" resultType="com.mkfactory.toothless.donot.touch.dto.StaffInfoDto">
SELECT * FROM tl_jic_staff_info 
WHERE STAFF_PK = #{STAFF_PK}
</select>





<!-- 만족도조사 값 입력-->
<insert id="insertHopeJobFeedback">
INSERT INTO tl_d_hope_job_feedback values(
	tl_d_hope_job_feedback_seq.nextval,
	#{hope_job_pk},
	#{hjf_score},
	#{hjf_comment},
	sysdate
)

</insert>

<!-- 특정학생 미응답 만족도조사 갯수 -->
<select id="countUnAnsweredHJF" resultType="int">
SELECT count(*) FROM TL_D_HOPE_JOB
WHERE HOPE_JOB_PK NOT IN 
	(
	SELECT HOPE_JOB_PK FROM
	TL_D_HOPE_JOB_FEEDBACK
	)
AND STUDENT_PK = #{STUDENT_PK}
AND IS_END_HOPE_JOB = 'Y'
</select>


<!-- 특정학생 만족도 조사 안한 구직희망 프로그램 정보리스트 -->
<select id="getUnAnsweredHJFList" resultType="com.mkfactory.toothless.d.dto.HopeJobDto">
SELECT * FROM TL_D_HOPE_JOB
WHERE HOPE_JOB_PK NOT IN 
	(
	SELECT HOPE_JOB_PK FROM
	TL_D_HOPE_JOB_FEEDBACK
	)
AND STUDENT_PK = #{STUDENT_PK}
AND IS_END_HOPE_JOB = 'Y'

</select>


<!-- 구직관심 등록 관련 -->
<!-- 특정구직희망신청으로 구직관심분야 뽑아오기 -->
<select id="getHopeJobCategoryList" resultType="com.mkfactory.toothless.d.dto.HopeJobCategoryDto">
SELECT * FROM TL_D_HOPE_JOB_CATEGORY 
WHERE HOPE_JOB_PK =#{HOPE_JOB_PK} 
</select>

<!-- 채용 분야 카테고리pk로 채용 카테고리 꺼내오기 -->
<select id="getJobFieldCategoryByPk" resultType="com.mkfactory.toothless.d.dto.JobFieldCategoryDto">
SELECT * FROM TL_D_JOB_FIELD_CATEGORY
WHERE JOB_FIELD_CATEGORY_PK = #{JOB_FIELD_CATEGORY_PK}
</select>


<!-- 구직관심분야 등록 -->
<insert id="insertHopeJobCategory">
INSERT INTO TL_D_HOPE_JOB_CATEGORY values(
	TL_D_HOPE_JOB_CATEGORY_seq.nextval,
	#{hope_job_pk},
	#{job_field_category_pk}
)
</insert>

<!-- 특정 구직관심 select -->
<select id="getHopeJobCategory" resultType="com.mkfactory.toothless.d.dto.HopeJobCategoryDto">
SELECT *
FROM TL_D_HOPE_JOB_CATEGORY
WHERE JOB_FIELD_CATEGORY_PK  = #{job_field_category_pk}
AND HOPE_JOB_PK  = #{hope_job_pk}
</select>

<!-- 오래된순 온라인상담 전체 꺼내오기 + 검색 및 정렬기능 추가-->
<select id="getOnlineConsultingList" resultType="com.mkfactory.toothless.d.dto.OnlineConsultingDto">
SELECT t1.* from
	(SELECT a.*, rownum rnum FROM TL_D_ONLINE_CONSULTING a 		
		where 1=1
		and a.hope_job_pk in (
		SELECT hope_job_pk FROM TL_D_HOPE_JOB
		WHERE IS_END_HOPE_JOB = 'N'
		)<!-- 추가부분 -->
		<if test="isReply != null">
			<choose>
				<when test="isReply == 'all'">
					AND 1=1		
				</when>
				<when test="isReply == 'reply'">
					AND a.ON_CONSULTING_PK in 
					(
						select b.ON_CONSULTING_PK
						from TL_D_ONLINE_CONSULTING_REPLY b
					)				 
				</when>
				<when test="isReply == 'unReply'">
					AND a.ON_CONSULTING_PK not in
					(
						select c.ON_CONSULTING_PK
						from TL_D_ONLINE_CONSULTING_REPLY c
					)		
				</when>
			</choose>
		</if>
		<!-- 검색 -->
		<if test="searchType != null">
			<choose>
				<when test="searchType  == 'student_name'">
					AND a.HOPE_JOB_PK  IN
					(
						SELECT HOPE_JOB_PK FROM TL_D_HOPE_JOB c
						WHERE c.STUDENT_PK IN
						(
							SELECT tjsi.STUDENT_PK  FROM TL_JIC_STUDENT_INFO tjsi 
							WHERE tjsi.NAME  LIKE '%' || #{searchContentes} || '%'
						)
					)
				</when>
				<when test="searchType  == 'online_consulting_pk'">
					AND a.ON_CONSULTING_PK LIKE '%' || #{searchContentes} || '%'		 
				</when>
				<otherwise>
					AND 1=1
				</otherwise>
			</choose>
		</if>	
	<if test="sortby != null">
		<choose>
			<when test="sortby == 'latest'">
				ORDER BY CREATED_AT DESC
			</when>
			<when test="sortby == 'earliest'">
				ORDER BY CREATED_AT ASC	 
			</when>
			<otherwise>
				ORDER BY CREATED_AT DESC		 
			</otherwise>
		</choose>
	</if>
	)t1
<![CDATA[		
WHERE t1.rnum >= (#{pageNum}-1)*10+1 AND t1.rnum <= #{pageNum}*10
]]>		
</select>


<!-- 글 총갯수 계산 -->
<!-- 페이징 관련 작업 -->
<select id="countTotalBoardNumInSOC" resultType="int">

SELECT count(*) FROM TL_D_ONLINE_CONSULTING a 		
		where 1=1
		and a.hope_job_pk in (
		SELECT hope_job_pk FROM TL_D_HOPE_JOB
		WHERE IS_END_HOPE_JOB = 'N'
		)<!-- 추가부분 -->
		<if test="isReply != null">
			<choose>
				<when test="isReply == 'all'">
					AND 1=1		
				</when>
				<when test="isReply == 'reply'">
					AND a.ON_CONSULTING_PK in 
					(
						select b.ON_CONSULTING_PK
						from TL_D_ONLINE_CONSULTING_REPLY b
					)				 
				</when>
				<when test="isReply == 'unReply'">
					AND a.ON_CONSULTING_PK not in
					(
						select c.ON_CONSULTING_PK
						from TL_D_ONLINE_CONSULTING_REPLY c
					)		
				</when>
			</choose>
		</if>
		<!-- 검색 -->
		<if test="searchType != null">
			<choose>
				<when test="searchType  == 'student_name'">
					AND a.HOPE_JOB_PK  IN
					(
						SELECT HOPE_JOB_PK FROM TL_D_HOPE_JOB c
						WHERE c.STUDENT_PK IN
						(
							SELECT tjsi.STUDENT_PK  FROM TL_JIC_STUDENT_INFO tjsi 
							WHERE tjsi.NAME  LIKE '%' || #{searchContentes} || '%'
						)
					)
				</when>
				<when test="searchType  == 'online_consulting_pk'">
					AND a.ON_CONSULTING_PK LIKE '%' || #{searchContentes} || '%'		 
				</when>
				<otherwise>
					AND 1=1
				</otherwise>
			</choose>
		</if>	
	<if test="sortby != null">
		<choose>
			<when test="sortby == 'latest'">
				ORDER BY CREATED_AT DESC
			</when>
			<when test="sortby == 'earliest'">
				ORDER BY CREATED_AT ASC	 
			</when>
			<otherwise>
				ORDER BY CREATED_AT DESC		 
			</otherwise>
		</choose>
	</if>
</select>




<!-- 특정 관심구직 삭제 -->
<delete id="deleteHopeJobCategory">
DELETE FROM TL_D_HOPE_JOB_CATEGORY
WHERE HOPE_JOB_CATEGORY_PK = #{HOPE_JOB_CATEGORY_PK}
</delete>



<!-- 교직원용 -->
<!-- 구직희망pk로 학생정보 뽑기 -->
<select id="getStudentInfoByHopeJobPk" resultType="com.mkfactory.toothless.donot.touch.dto.StudentInfoDto">
SELECT * FROM TL_JIC_STUDENT_INFO a 
WHERE a.STUDENT_PK =
( 
	SELECT b.STUDENT_PK 
	FROM TL_D_HOPE_JOB b 
	WHERE b.HOPE_JOB_PK = #{HOPE_JOB_PK}
)
</select>

<!-- 온라인상담pk로 학생정보 뽑기 -->
<select id="getStudentInfoByOnPk" resultType="com.mkfactory.toothless.donot.touch.dto.StudentInfoDto">
SELECT *
FROM TL_JIC_STUDENT_INFO c
WHERE c.STUDENT_PK =(
	SELECT a.STUDENT_PK 
	FROM TL_D_HOPE_JOB a
	WHERE a.HOPE_JOB_PK =
		(
		SELECT b.hope_job_PK
		FROM TL_D_ONLINE_CONSULTING b
		WHERE b.ON_CONSULTING_PK = #{ON_CONSULTING_PK}
		)
	)

</select>


<!-- 진행중 구직희망 싹 다 -->
<select id="getOngoingHopeJobList" resultType="com.mkfactory.toothless.d.dto.HopeJobDto">
SELECT * FROM TL_D_HOPE_JOB 
WHERE IS_END_HOPE_JOB = 'N' 
</select>


<!-- 구직희망pk에따른 취업상담 테이블 갯수  -->
<select id="countConsultingByHopeJobPk" resultType="int">
SELECT count(*) FROM TL_D_CONSULTING
WHERE HOPE_JOB_PK = #{HOPE_JOB_PK}
</select>

<!-- 구직희망pk에따른 온라인상담 테이블 갯수  -->
<select id="countOnConsultingByHopeJobPk" resultType="int">
SELECT count(*) FROM tl_d_online_consulting
WHERE HOPE_JOB_PK = #{HOPE_JOB_PK}
</select>

<insert id="insertConsultingInfo">
INSERT INTO tl_d_consulting values(
	tl_d_consulting_seq.nextval,
	#{hope_job_pk},
	#{staff_pk},
	#{consulting_contents},
	#{consulting_date},
	sysdate
)

</insert>

<!-- 만족도조사 전체리스트 -->
<select id="getHopeJobFeedbackListAll" resultType="com.mkfactory.toothless.d.dto.HopeJobFeedbackDto">
SELECT * FROM TL_D_HOPE_JOB_FEEDBACK
where 1=1
	<if test="sortHJFScore != null">
		<choose>
			<when test="sortHJFScore == 'sortLow'">
				ORDER BY HJF_SCORE ASC 			 
			</when>
			<when test="sortHJFScore == 'sortHigh'">
				ORDER BY HJF_SCORE desc
			</when>
			<otherwise>
				and 1=1
			</otherwise>
		</choose>		
	</if>
	
</select>

<!-- 만족도조사 평균평점 -->
<select id="avgHopeJobFeedbackScore" resultType="Integer">
SELECT avg(hjf_score) FROM TL_D_HOPE_JOB_FEEDBACK 
</select>

<select id="getHopeJobFeedbackByPk" resultType="com.mkfactory.toothless.d.dto.HopeJobFeedbackDto">
SELECT * FROM TL_D_HOPE_JOB_FEEDBACK
where HOPE_JOB_FEEDBACK_PK =  #{HOPE_JOB_FEEDBACK_PK}
</select>

<!-- 구직희망정보 업데이트 -->
<update id="updateHopeJobProcess">
uPDATE TL_D_HOPE_JOB 
SET 
HOPE_SALARY = #{hope_salary},
hope_area = #{hope_area},
REQUIERMENTS = #{requierments}
WHERE HOPE_JOB_PK = #{hope_job_pk}
</update>

<!-- 구직희망 종료 -->
<update id="endHopeJobProcess">
uPDATE TL_D_HOPE_JOB 
SET IS_END_HOPE_JOB = 'Y'
WHERE HOPE_JOB_PK = #{hope_job_pk}
</update>


<!-- 메인페이지 구직희만 신청 페이지용 -->
<select id="getHopeJobInfoNumFive" resultType="map">
SELECT * FROM TL_D_HOPE_JOB a
INNER JOIN TL_JIC_STUDENT_INFO b ON a.student_pk = b.student_pk
WHERE a.IS_END_HOPE_JOB = 'N'
ORDER BY a.CREATED_AT desc
</select>

</mapper>