<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mkfactory.toothless.a.staff.mj.mapper.DormStaffSqlMapper">

	<!-- 학년도/학기 등록 -->
	<insert id="insertYear">
		INSERT INTO tl_a_semester values(
			tl_a_semester_seq.nextval,
			#{semester_year},
			#{semester},
			'N'
		)
	</insert>
	
	<!-- 학년도/학기 조회 -->
	<select id="selectYearList" resultType="com.mkfactory.toothless.a.dto.SemesterDto">
		SELECT * FROM tl_a_semester
		ORDER BY SEMESTER_YEAR desc, SEMESTER_pk desc
	</select>
	
	<!-- 현재 학기 선택  -->
	<update id="updateThisSemester">
		UPDATE TL_A_SEMESTER
		SET 
		PROGRESS_STATE = 'Y'
		WHERE SEMESTER_PK = #{SEMESTER_PK}
	</update>
	
	<!-- 현재 학기 아닌것들 -->
	<update id="updateNotThisSemester">
		UPDATE TL_A_SEMESTER
		SET 
		PROGRESS_STATE = 'N'
		WHERE SEMESTER_PK != #{SEMESTER_PK}
	</update>
	
	<!-- 특정학기 삭제 -->
	<delete id="deleteSemester">
		DELETE FROM TL_A_SEMESTER
		WHERE SEMESTER_PK = #{SEMESTER_PK}
	</delete>
	
	<!-- 현재학기 조회 -->
	<select id="selectThisSemester" resultType="com.mkfactory.toothless.a.dto.SemesterDto">
		SELECT * FROM tl_a_semester
		WHERE PROGRESS_STATE = 'Y'
	</select>
	
	<!-- 현재학기에 해당하는 년도의 모든 학기들.. -->
	<select id="selectThisYearAllSemester" resultType="map">
		SELECT semester AS SEME, PROGRESS_STATE AS STATE FROM tl_a_semester
		WHERE SEMESTER_YEAR = (
			SELECT SEMESTER_YEAR FROM tl_a_semester
			WHERE PROGRESS_STATE = 'Y'
		)
		ORDER BY SEMESTER_pk asc
	</select>
	
	<!-- 등록된 이전 년도들 -->
	<select id="selectBeforeYearAll" resultType="map">
		SELECT SEMESTER_YEAR AS YEARS FROM tl_a_semester
		GROUP BY SEMESTER_YEAR
		ORDER BY SEMESTER_YEAR asc
	</select>
	
	<!-- 등록된 이전 년도들 & 학기들... -->
	<select id="selectBeforeYearAllSemester" resultType="map">
		SELECT SEMESTER_YEAR AS YEARS, semester AS SEME FROM tl_a_semester
		GROUP BY SEMESTER_YEAR, semester
		ORDER BY SEMESTER_YEAR desc
	</select>
	
	<!-- 입주공고 등록 -->
	<insert id="insertInfo">
		INSERT INTO tl_a_join_dorm_info values(
			tl_a_join_dorm_info_seq.nextval,
			#{semester_pk},
			#{title},
			#{detail_expln},
			#{apply_start_date},
			#{apply_end_date},
			#{selection_amount},
			#{pass_anncm_date},
			#{payment_start_date},
			#{payment_end_date},
			#{asgnm_anncm_date},
			#{join_dorm_date},
			sysdate
		)
	</insert>
	
	<!-- 공고 수정 -->
	<update id="updateJoinInfo">
		UPDATE tl_a_join_dorm_info
		SET TITLE = #{title},
		DETAIL_EXPLN = #{detail_expln},
		APPLY_START_DATE = #{apply_start_date},
		APPLY_END_DATE = #{apply_end_date},
		SELECTION_AMOUNT = #{selection_amount},
		PASS_ANNCM_DATE = #{pass_anncm_date},
		PAYMENT_START_DATE = #{payment_start_date},
		PAYMENT_END_DATE = #{payment_end_date},
		ASGNM_ANNCM_DATE = #{asgnm_anncm_date},
		JOIN_DORM_DATE = #{join_dorm_date}
		WHERE DORM_INFO_PK = #{dorm_info_pk}
	</update>
	
	<!-- 공고삭제 -->
	<delete id="deleteJoinInfo">
		DELETE FROM tl_a_join_dorm_info
		WHERE DORM_INFO_PK = #{DORM_INFO_PK}
	</delete>
	
	<!-- 특정학기에 공고 등록여부 -->
	<select id="countSomeSemesterJoinInfo" resultType="int">
		SELECT COUNT(*) FROM tl_a_join_dorm_info
		WHERE SEMESTER_PK = #{SEMESTER_PK}
	</select>
	
	<!-- 특정공고에 입사신청 여부 -->
	<select id="countSomeApplyInfo" resultType="int">
		SELECT COUNT(*) FROM tl_a_join_dorm_application
		WHERE DORM_INFO_PK = #{DORM_INFO_PK}
	</select>
	
	<!-- 현재학기 등록된 공고들 조회 -->
	<select id="selectAllDormInfoList" resultType="com.mkfactory.toothless.a.dto.JoinDormInfoDto">
		SELECT * FROM tl_a_join_dorm_info di
		WHERE di.SEMESTER_PK = (SELECT SEMESTER_PK FROM tl_a_semester
		WHERE PROGRESS_STATE = 'Y')
		ORDER BY DORM_INFO_PK desc
	</select>
	
	<!-- 현재 학년도 전체 조회 -->
	<select id="selectAllThisYearList" resultType="com.mkfactory.toothless.a.dto.SemesterDto">
		SELECT * FROM tl_a_semester
		WHERE SEMESTER_YEAR = (
			SELECT SEMESTER_YEAR FROM tl_a_semester
			WHERE PROGRESS_STATE = 'Y'
		)
		ORDER BY SEMESTER_pk asc
	</select>
	
	<!-- 입사신청 리스트 -->
	<select id="selectAllDormApplyList" resultType="com.mkfactory.toothless.a.dto.JoinDormApplicationDto">
		SELECT * FROM TL_A_JOIN_DORM_APPLICATION
		ORDER BY DORM_APPLICATION_PK desc
	</select>
	
	<!-- 선발상태 업데이트 -->
	<update id="updateSelectionStatus">
		UPDATE TL_A_JOIN_DORM_APPLICATION
		SET SELECTION_STATUS = #{selection_status}
		WHERE DORM_APPLICATION_PK = #{dorm_application_pk}
	</update>
	
	<!-- 선발된 정보 리스트 -->
	<select id="selectAllDormSelectedList" resultType="com.mkfactory.toothless.a.dto.JoinDormApplicationDto">
		SELECT * FROM TL_A_JOIN_DORM_APPLICATION
		WHERE SELECTION_STATUS = 'Y'
		ORDER BY DORM_APPLICATION_PK desc
	</select>
	
	<!-- 납부상태 업데이트 -->
	<update id="updatePaymentStatus">
		UPDATE TL_A_JOIN_DORM_APPLICATION
		SET PAYMENT_STATUS = #{payment_status}
		WHERE DORM_APPLICATION_PK = #{dorm_application_pk}
	</update>
	
	<!-- 선발인원 중 납부완료 리스트 -->
	<select id="selectPaymentYesList" resultType="com.mkfactory.toothless.a.dto.JoinDormApplicationDto">
		SELECT * FROM TL_A_JOIN_DORM_APPLICATION
		WHERE SELECTION_STATUS = 'Y'
		AND PAYMENT_STATUS = 'Y'
		ORDER BY DORM_APPLICATION_PK desc
	</select>
	
	<!-- 선발인원 중 미납 리스트 -->
	<select id="selectPaymentNoList" resultType="com.mkfactory.toothless.a.dto.JoinDormApplicationDto">
		SELECT * FROM TL_A_JOIN_DORM_APPLICATION
		WHERE SELECTION_STATUS = 'Y'
		AND PAYMENT_STATUS = 'N'
		ORDER BY DORM_APPLICATION_PK desc
	</select>
	
	<!-- ============================================================ -->
	<!-- 메인페이지 최근 2개 공고리스트 -->
	<select id="selectDormNotice" resultType="com.mkfactory.toothless.a.dto.DormNoticeDto">
		SELECT * FROM (
			SELECT t1.*, ROWNUM rnum FROM 
				(SELECT * FROM TL_A_DORM_NOTICE
				ORDER BY created_at ASC
			) t1
		) t2
		<![CDATA[
		WHERE t2.rnum > ((SELECT count(*) FROM TL_A_DORM_NOTICE) - 2)
		]]>
	</select>
	
	<!-- 임원 현황 -->
	<select id="countExecutive" resultType="int">
		SELECT count(*) FROM TL_A_EXECUTIVE
	</select>
	
	<!-- 금일 일지 현황 -->
	<select id="countTodayDiary" resultType="int">
		SELECT count(*) FROM TL_A_DIARY
		WHERE TO_CHAR(CREATED_AT, 'YYYYMMDD') = 
		TO_CHAR(SYSDATE, 'YYYYMMDD')
	</select>
	
	<!-- 장학금 대상 현황 -->
	<select id="countPlusPointDormStudent" resultType="int">
		SELECT count(*) FROM (
			SELECT tap.DORM_STUDENT_PK FROM TL_A_POINT tap 
			JOIN TL_A_POINT_CATEGORY tapc ON tap.POINT_CATEGORY_PK = tapc.POINT_CATEGORY_PK
		<![CDATA[ 
			GROUP BY tap.DORM_STUDENT_PK HAVING SUM(tapc.POINT) > 0)
		]]>
	</select>
	
	<!-- 징계 대상 현황 -->
	<select id="countMinusPointDormStudent" resultType="int">
		SELECT count(*) FROM (
			SELECT tap.DORM_STUDENT_PK FROM TL_A_POINT tap 
			JOIN TL_A_POINT_CATEGORY tapc ON tap.POINT_CATEGORY_PK = tapc.POINT_CATEGORY_PK
		<![CDATA[ 
			GROUP BY tap.DORM_STUDENT_PK HAVING SUM(tapc.POINT) < 0)
		]]>
	</select>
	
	<!-- 금일 외출/외박 현황 -->
	<select id="countTodayExit" resultType="int">
		SELECT count(*) FROM TL_A_EXIT
		WHERE TO_CHAR(EXIT_DATE, 'YYYYMMDD') = 
		TO_CHAR(SYSDATE, 'YYYYMMDD')
	</select>
	
	<!-- 금일 점호 불참 현황 -->
	<select id="countTodayCallAbsence" resultType="int">
		SELECT count(*) FROM TL_A_CALL_ABSENCE
		WHERE TO_CHAR(CREATED_AT, 'YYYYMMDD') = 
		TO_CHAR(SYSDATE, 'YYYYMMDD')
	</select>
	<!-- 현재 배정 현황 -->
	
	<select id="assignedDormStudentCount" resultType="int">
	
		SELECT count(*) FROM TL_A_DORM_STUDENT
	
	</select>

</mapper>