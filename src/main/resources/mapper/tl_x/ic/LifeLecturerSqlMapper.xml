<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mkfactory.toothless.x.ic.mapper.LifeLecturerSqlMapper">
	<!--  개설된 강의중 강사키 맞는 리스트 가지고 오기 -->
	<select id="selectMyOpenLectureInfoList" resultType="com.mkfactory.toothless.x.dto.OpenLectureDto">
		SELECT * FROM tl_x_open_lecture
		WHERE lecturer_key = #{lecturer_key}
		ORDER BY open_lecture_key DESC
	</select>
	<!--  수업 기본 정보 -->
	<select id="selectLectureInfo" resultType="com.mkfactory.toothless.x.dto.LectureInfoDto">
		SELECT * FROM tl_x_lecture_info
		WHERE lecture_info_key = #{lecture_info_key}
	</select>
	<!-- 강사정보 -->
	<select id="selectLifeLecturerInfo" resultType="com.mkfactory.toothless.x.dto.LifeLecturerDto">
		SELECT * FROM tl_x_life_lecturer
		WHERE external_pk = #{external_pk}
	</select>
	<!--평생학생 정보 -->
	<select id="selectStudentDto" resultType="com.mkfactory.toothless.x.dto.LifeStudentDto">
		SELECT * FROM tl_x_life_Student
		WHERE LIFE_STUDENT_KEY = #{life_student_key}
	</select>
	<!--  수강생 리스트 -->
	<select id="selectLectureStudentList" resultType="com.mkfactory.toothless.x.dto.LectureStudentDto">
		SELECT * FROM tl_x_lecture_student
		WHERE open_lecture_key = #{open_lecture_key}
	</select>
	<select id="selectOpenLectureDto" resultType="com.mkfactory.toothless.x.dto.OpenLectureDto">
		SELECT * FROM tl_x_open_lecture
		WHERE OPEN_LECTURE_KEY = #{open_lecture_key}
	</select>
	
	<select id="selectAttendanceBookPk" resultType="int">
		SELECT tl_x_attendance_book_seq.nextval FROM dual
	</select>
	
	<insert id="insertAttendanceStatus">
		INSERT INTO tl_x_attendance_status values(
			tl_x_attendance_status_seq.nextval,
			#{attendance_book_key},
			#{lecture_student_key},
			#{status},
			sysdate
		)	
	</insert>
	
	<insert id="insertAttendanceBook">
		INSERT INTO tl_x_attendance_book values(
			#{attendance_book_key},
			#{open_lecture_key},
			#{date_created},
			#{study_log},
			sysdate
		)
	</insert>
	
	<select id="selectAttendanceBookByDate" resultType="com.mkfactory.toothless.x.dto.AttendanceBookDto">
		SELECT * FROM tl_x_attendance_book
		WHERE date_created = #{date_created}
	</select>
	
	<select id="selectAttendanceStatusByBookPk" resultType="com.mkfactory.toothless.x.dto.AttendanceStatusDto">
		SELECT * FROM tl_x_attendance_status
		WHERE attendance_book_key = #{attendance_book_key}
	</select>
	
	<select id="selectLectureStudentDto" resultType="com.mkfactory.toothless.x.dto.LectureStudentDto">
		SELECT * FROM tl_x_lecture_student
		WHERE lecture_student_key = #{lecture_student_key}
	</select>
	
	<select id="selectOpenLectureName" resultType="String">
		SELECT name FROM tl_x_lecture_info
		WHERE lecture_info_key in (
			SELECT lecture_info_key FROM tl_x_open_lecture
			WHERE open_lecture_key = #{open_lecture_key)
	</select>
	
	<select id="selectLectureCount" resultType="int">
		SELECT count(*) FROM tl_x_open_lecture
		WHERE lecture_info_key = #{lecture_info_key}
	</select>
	
	<select id="lectureRoundCount" resultType="int">
		SELECT ol2.rnum FROM (
				SELECT ol.open_lecture_key, rownum AS rnum FROM tl_x_open_lecture ol
				WHERE LECTURE_INFO_KEY = #{lecture_info_key} 
				ORDER BY OPEN_DATE) ol2
		WHERE ol2.open_lecture_key = #{open_lecture_key}
	
	</select>
	
	<select id="selectLecturerDto" resultType="com.mkfactory.toothless.x.dto.LifeLecturerDto">
		SELECT * FROM TL_X_LIFE_LECTURER
		WHERE lecturer_key = #{lecturer_key}
	</select>
	
	
	
	<select id="selectCurrentStudyDay" resultType="map">
		SELECT CASE WHEN TO_CHAR(TO_DATE(DT),'D') IN ('1','7')
            THEN '주말'
            ELSE '평일' END AS WEEK_DAY,
            DT
		FROM (
		    SELECT TO_CHAR(TO_DATE(ST_DT, 'YYYY-MM-DD') + LEVEL - 1, 'YYYY-MM-DD') AS DT
		    FROM ( SELECT
		    			(SELECT TO_CHAR(TRUNC(open_date, 'DD'), 'YYYYMMDD')
		    			FROM tl_x_open_lecture
						WHERE open_lecture_key = #{open_lecture_key}) 
					AS ST_DT,
					<!-- 나중에는 현재날짜가 종강일을 넘어감으로 if 문 통해서 분기를 만들어줘야함,....-->						
						(TO_CHAR(TRUNC(sysdate, 'DD'), 'YYYYMMDD'))
					AS END_DT
		           	FROM DUAL )
		    <![CDATA[
		    CONNECT BY LEVEL <=  TO_DATE(END_DT, 'YYYYMMDD') - TO_DATE(ST_DT, 'YYYYMMDD') + 1
			]]>
		)ORDER BY DT DESC
	</select>
	
	<select id="selectLateStudentCount" resultType="int">
		SELECT count(*) FROM tl_x_attendance_status
		WHERE attendance_book_key = #{attendance_book_key}
		AND status LIKE '지각'
	</select>
	<select id="selectAbsenceStudentCount" resultType="int">
		SELECT count(*) FROM tl_x_attendance_status
		WHERE attendance_book_key = #{attendance_book_key}
		AND status LIKE '결석'
	</select>

	<select id="selectLectureStudentLateCount" resultType="int">
		SELECT count(*) FROM tl_x_attendance_status
		WHERE lecture_student_key = #{lecture_student_key}
		AND status like '지각'
	</select>
	
	<select id="selectLectureStudentAbsenceCount" resultType="int">
		SELECT count(*) FROM tl_x_attendance_status
		WHERE lecture_student_key = #{lecture_student_key}
		AND status like '결석'
	</select>
	<select id="selectLifeStudentExternalId" resultType="com.mkfactory.toothless.donot.touch.dto.ExternalInfoDto">
		SELECT * FROM TL_JIC_EXTERNAL_INFO
		WHERE external_pk = #{external_pk}
	</select>
	
	<select id="selectOpenLectureCategoryName" resultType="String">
		SELECT category_name FROM tl_x_lecture_category
		WHERE lecture_category_key = #{lecture_category_key}
	</select>
	
	<select id="selectLectureTestKey" resultType="int">
		SELECT tl_x_lecture_test_seq.nextval FROM dual
	</select>
	
	<insert id="insertLectureTestInfo">
		INSERT INTO tl_x_lecture_test VALUES(
			#{lecture_test_key},
			#{open_lecture_key},
			#{test_name},
			#{open_test_day},
			#{close_test_day},
			SYSDATE
		)
	</insert>
	<select id="selectTestQuestionKey" resultType="int">
		SELECT tl_x_test_question_seq.nextval FROM dual
	</select>
	<insert id="insertTestQuestionInfo">
		INSERT INTO tl_x_test_question VALUES(
			#{test_question_key},
			#{lecture_test_key},
			#{question},
			#{test_point},
			#{question_number},
			SYSDATE
		)
	</insert>
	<insert id="insertQuestionChoiceInfo">
		INSERT INTO tl_x_question_choice VALUES(
			tl_x_question_choice_seq.nextval,
			#{test_question_key},
			#{choice},
			#{answer},
			SYSDATE
		)
	</insert>
	
	
	<select id="selectLectureTestList" resultType="com.mkfactory.toothless.x.dto.LectureTestDto">
		SELECT * FROM tl_x_lecture_test
		WHERE open_lecture_key = #{open_lecture_key}
	</select>
	
	<select id="selectTestingStudentCount" resultType="int">
		SELECT count(*) FROM tl_x_test_result
		WHERE lecture_test_key = #{lecture_test_key}	
	</select>
	
	
	
	

</mapper>